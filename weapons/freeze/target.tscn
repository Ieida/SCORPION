[gd_scene load_steps=7 format=3 uid="uid://ckdsch35e2kpi"]

[ext_resource type="Texture2D" uid="uid://ywmr84swid8l" path="res://icon.svg" id="1_nhyby"]
[ext_resource type="Script" path="res://weapons/freeze/stats.gd" id="2_w6nlw"]
[ext_resource type="Script" path="res://weapons/poison/poison_debuff.gd" id="3_a1csw"]

[sub_resource type="GDScript" id="GDScript_n2wkb"]
resource_name = "target"
script/source = "extends Node2D


var target: Node2D
@onready var stats : PathWalkerStats = $Stats


func _ready():
  target = get_tree().get_first_node_in_group(\"player\")


func _physics_process(delta):
  global_position = global_position.move_toward(target.global_position, stats.speed * delta)
"

[sub_resource type="GDScript" id="GDScript_bv03d"]
resource_name = "hitbox"
script/source = "extends Area2D

@onready var stats = $\"../Stats\"

func take_damage(amt: int):
  stats.hp = max(0, stats.hp - amt)
  if stats.hp == 0:
    get_parent().queue_free()
func freeze(amt: int):
  stats.speed = stats.base_speed * 0.5
  stats.start_freeze_expiry_timer()
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_ue5ft"]
size = Vector2(32, 32)

[node name="Target" type="Node2D"]
script = SubResource("GDScript_n2wkb")

[node name="Sprite2D" type="Sprite2D" parent="."]
scale = Vector2(0.3, 0.3)
texture = ExtResource("1_nhyby")

[node name="Hitbox" type="Area2D" parent="."]
collision_layer = 2
collision_mask = 0
monitoring = false
script = SubResource("GDScript_bv03d")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Hitbox"]
shape = SubResource("RectangleShape2D_ue5ft")

[node name="Stats" type="Node2D" parent="."]
script = ExtResource("2_w6nlw")

[node name="FreezeExpiration" type="Timer" parent="Stats"]
wait_time = 2.0
one_shot = true

[node name="FreezeDebuff" type="Node2D" parent="."]
script = ExtResource("3_a1csw")

[node name="PoisonExpiration" type="Timer" parent="FreezeDebuff"]
wait_time = 2.0
one_shot = true

[node name="PoisonTick" type="Timer" parent="FreezeDebuff"]

[connection signal="timeout" from="Stats/FreezeExpiration" to="Stats" method="_on_freeze_expiration_timeout"]
[connection signal="timeout" from="FreezeDebuff/PoisonExpiration" to="FreezeDebuff" method="_on_poison_expiration_timeout"]
[connection signal="timeout" from="FreezeDebuff/PoisonTick" to="FreezeDebuff" method="_on_poison_tick_timeout"]
